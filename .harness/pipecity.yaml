pipeline:
  name: pipe-city
  identifier: pipecity
  projectIdentifier: wyatt_munson
  orgIdentifier: December_2023
  tags: {}
  stages:
    - stage:
        name: printer
        identifier: printer
        description: ""
        type: Custom
        spec:
          execution:
            steps:
              - stepGroup:
                  name: stepToThisGroup
                  identifier: stepToThisGroup
                  steps:
                    - step:
                        type: ShellScript
                        name: ShellScript_1
                        identifier: ShellScript_1
                        spec:
                          shell: Bash
                          onDelegate: true
                          source:
                            type: Inline
                            spec:
                              script: |
                                echo "HELLO!"

                                echo CURR STRAT STATUS: <+strategy.currentStatus>

                                echo STAGE STATUS: <+stage.status>
                                echo STEP GRP: <+strategy.node.get("stepToThisGroup").currentStatus>
                                echo STEP: <+strategy.node.get("ShellScript_1").currentStatus>

                                echo CURR ITERATION: <+strategy.iteration>
                                echo TOTAL ITERATIONS: <+strategy.iterations>
                          environmentVariables: []
                          outputVariables: []
                        timeout: 10m
                        strategy:
                          matrix:
                            items:
                              - "1"
                              - "2"
                              - "3"
                              - "4"
                              - "5"
                            exclude:
                              - items: "1"
                              - items: "5"
                            maxConcurrency: 2
                        when:
                          stageStatus: Success
                          condition: <+strategy.iteration> != 0 || <+strategy.iteration> != 1 || <+strategy.iteration> != 4
                  strategy:
                    repeat:
                      times: 1
        tags: {}
        strategy:
          repeat:
            times: 1
    - stage:
        name: deploy
        identifier: deploy
        description: ""
        type: Deployment
        spec:
          deploymentType: Kubernetes
          service:
            serviceRef: basicnginxservice
          execution:
            steps:
              - step:
                  name: Rollout Deployment
                  identifier: rolloutDeployment
                  type: K8sRollingDeploy
                  timeout: 10m
                  spec:
                    skipDryRun: false
                    pruningEnabled: false
              - step:
                  type: ShellScript
                  name: ShellScript_1
                  identifier: ShellScript_1
                  spec:
                    shell: Bash
                    onDelegate: true
                    source:
                      type: Inline
                      spec:
                        script: echo 1.1.0
                    environmentVariables: []
                    outputVariables: []
                  timeout: 10m
                  when:
                    stageStatus: Success
                    condition: <+env.identifier> == "prodcity"
            rollbackSteps:
              - step:
                  name: Rollback Rollout Deployment
                  identifier: rollbackRolloutDeployment
                  type: K8sRollingRollback
                  timeout: 10m
                  spec:
                    pruningEnabled: false
          environments:
            metadata:
              parallel: true
            values:
              - environmentRef: devcity
                deployToAll: false
                infrastructureDefinitions:
                  - identifier: devinfra
              - environmentRef: prodcity
                deployToAll: true
                infrastructureDefinitions: <+input>
        tags: {}
        failureStrategies:
          - onFailure:
              errors:
                - AllErrors
              action:
                type: StageRollback
        when:
          pipelineStatus: Success
          condition: 1 == 2
