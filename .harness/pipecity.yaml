pipeline:
  name: pipe-city
  identifier: pipecity
  projectIdentifier: wyatt_munson
  orgIdentifier: December_2023
  tags: {}
  stages:
    - stage:
        name: printer
        identifier: printer
        description: ""
        type: Custom
        spec:
          execution:
            steps:
              - stepGroup:
                  name: stepToThisGroup
                  identifier: stepToThisGroup
                  steps:
                    - step:
                        type: ShellScript
                        name: ShellScript_1
                        identifier: ShellScript_1
                        spec:
                          shell: Bash
                          onDelegate: true
                          source:
                            type: Inline
                            spec:
                              script: |
                                echo "HELLO!"

                                echo CURR STRAT STATUS: <+strategy.currentStatus>

                                echo STAGE STATUS: <+stage.status>
                                echo STEP GRP: <+strategy.node.get("stepToThisGroup").currentStatus>
                                echo STEP: <+strategy.node.get("ShellScript_1").currentStatus>

                                echo CURR ITERATION: <+strategy.iteration>
                                echo TOTAL ITERATIONS: <+strategy.iterations>
                          environmentVariables: []
                          outputVariables: []
                        timeout: 10m
                        strategy:
                          matrix:
                            items:
                              - "1"
                              - "2"
                              - "3"
                              - "4"
                              - "5"
                            exclude:
                              - items: "1"
                              - items: "5"
                            maxConcurrency: 1
                        when:
                          stageStatus: Success
                          condition: <+strategy.iteration> != 0 || <+strategy.iteration> != 1 || <+strategy.iteration> != 4
                  strategy:
                    repeat:
                      times: 1
        tags: {}
        strategy:
          repeat:
            times: 1
    - stage:
        name: deploy
        identifier: deploy
        template:
          templateRef: deploytemplatelab
          versionLabel: 0.1.0
          gitBranch: main
          templateInputs:
            type: Deployment
            spec:
              environments:
                values:
                  - environmentRef: prodcity
                    infrastructureDefinitions:
                      - identifier: prodinfra
    - stage:
        name: anotherdeploy
        identifier: anotherdeploy
        description: ""
        type: Deployment
        spec:
          deploymentType: Kubernetes
          service:
            serviceRef: <+input>
            serviceInputs: <+input>
          environment:
            environmentRef: <+input>
            deployToAll: false
            environmentInputs: <+input>
            serviceOverrideInputs: <+input>
            infrastructureDefinitions: <+input>
          execution:
            steps:
              - step:
                  name: Rollout Deployment
                  identifier: rolloutDeployment
                  type: K8sRollingDeploy
                  timeout: 10m
                  spec:
                    skipDryRun: false
                    pruningEnabled: false
              - step:
                  type: ShellScript
                  name: ShellScript_1
                  identifier: ShellScript_1
                  spec:
                    shell: Bash
                    onDelegate: true
                    source:
                      type: Inline
                      spec:
                        script: echo $SHELL_CITY
                    environmentVariables:
                      - name: SHELL_CITY
                        type: String
                        value: <+input>
                    outputVariables: []
                  timeout: 10m
            rollbackSteps:
              - step:
                  name: Rollback Rollout Deployment
                  identifier: rollbackRolloutDeployment
                  type: K8sRollingRollback
                  timeout: 10m
                  spec:
                    pruningEnabled: false
        tags: {}
        failureStrategies:
          - onFailure:
              errors:
                - AllErrors
              action:
                type: StageRollback
    - stage:
        name: post-deploy-print
        identifier: postdeployprint
        description: ""
        type: Custom
        spec:
          execution:
            steps:
              - step:
                  type: ShellScript
                  name: ShellScript_1
                  identifier: ShellScript_1
                  spec:
                    shell: Bash
                    onDelegate: true
                    source:
                      type: Inline
                      spec:
                        script: echo <+pipeline.stages.anotherdeploy.spec.execution.steps.rolloutDeployment.deploymentInfoOutcome.serverInstanceInfoList[0].name>
                    environmentVariables: []
                    outputVariables: []
                  timeout: 10m
        tags: {}
    - stage:
        name: call-display
        identifier: calldisplay
        description: ""
        type: Pipeline
        spec:
          org: December_2023
          pipeline: displayvars
          project: wyatt_munson
          outputs: []
